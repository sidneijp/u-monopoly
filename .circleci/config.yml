version: 2.1
jobs:
    build-test-deliver:
        working_directory: ~/u-monopoly/
        docker:
            - image: sidneijp/circleci-executor:latest
              environment:
                  DOCKER_REGISTRY: sidneijp
        steps:
            - checkout
            - setup_remote_docker:
                version: 18.06.0-ce
                docker_layer_caching: false
            - run:
                name: Login to Docker Hub
                command: |
                    echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USER --password-stdin
            - run:
                name: Build Docker Images
                command: |
                    cp .env.sample .env
                    cp web/.env.sample web/.env
                    export BUILD_VERSION=`echo "$CIRCLE_SHA1" | cut -c 1-8`;
                    docker-compose -f docker-compose.yml -f docker-compose.test.yml build --pull
            - run:
                name: Run Application environment
                command: |
                    export BUILD_VERSION=`echo "$CIRCLE_SHA1" | cut -c 1-8`;
                    docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d --no-build
            - run:
                name: Run Backend's tests
                command: |
                    docker-compose -f docker-compose.yml -f docker-compose.test.yml exec web pipenv run ./src/manage.py migrate
                    docker-compose -f docker-compose.yml -f docker-compose.test.yml exec web pipenv run pytest --cov=./src --cov-report=xml
                    docker cp "$(docker-compose -f docker-compose.yml -f docker-compose.test.yml ps -q web)":/code/coverage.xml web/coverage.xml
                    wget -qO - https://coverage.codacy.com/get.sh | sh -s report -l Python -r web/coverage.xml
            - run:
                name: Delivery Docker Images to Docker Hub
                command: |
                    export BUILD_VERSION=`echo "$CIRCLE_SHA1" | cut -c 1-8`;
                    docker tag "$DOCKER_REGISTRY"/u-monopoly:"$BUILD_VERSION" "$DOCKER_REGISTRY"/u-monopoly:latest;
                    docker push "$DOCKER_REGISTRY"/u-monopoly:"$BUILD_VERSION";
                    docker push "$DOCKER_REGISTRY"/u-monopoly:latest;
            - run:
                name: Deploy
                command: |
                    export BUILD_VERSION=`echo "$CIRCLE_SHA1" | cut -c 1-8`;

                    cp $CIRCLE_WORKING_DIRECTORY/machine.dat $HOME/.docker/
                    cd $HOME/.docker/
                    echo $DOCKER_MACHINE_ENCRPYTION_PASS | openssl enc -pbkdf2 -aes-256-cbc -pass stdin -d -in machine.dat > machine.tar.gz
                    tar xzf machine.tar.gz
                    sed -i "s|{HOME}|$HOME|" machine/machines/u-monopoly/config.json
                    cd $CIRCLE_WORKING_DIRECTORY

                    echo $STG_SECRETS_PASS | openssl enc -pbkdf2 -aes-256-cbc -pass stdin -d -in .stg.dat > .stg.tar.gz
                    tar xzf .stg.tar.gz
                    cp .stg/.env.stg .env
                    cp .stg/web/.env.stg web/.env

                    eval $(docker-machine env --shell sh u-monopoly)
                    docker-compose -f docker-compose.yml -f docker-compose.stg.yml up -d --no-build --remove-orphans
                    docker-compose -f docker-compose.yml -f docker-compose.stg.yml exec web pipenv run src/manage.py migrate
                    docker-compose -f docker-compose.yml -f docker-compose.stg.yml exec web pipenv run src/manage.py collectstatic --noinput
workflows:
    version: 2.1
    integration:
        jobs:
            - build-test-deliver
